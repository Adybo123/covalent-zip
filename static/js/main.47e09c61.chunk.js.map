{"version":3,"sources":["constants.js","components/StatusBar.js","components/Header.js","zipHandler.js","components/Browser.js","App.js","serviceWorker.js","index.js","icons/folder.png","icons/up.png","icons/save.png","icons/cross.png","icons/create.png","icons/document.png","icons/image.png","icons/no.png","icons/left.png"],"names":["constants","headerHeight","statusBarHeight","zipItemHeight","zipIconPadding","headerIconPadding","imageTypes","colours","bar","barText","separator","StatusBarStyled","styled","div","_templateObject","cnst","StatusBar","react_default","a","createElement","this","props","statusText","Component","zipFile","HeaderStyled","Header_templateObject","MenuStyled","_templateObject2","menuIconSize","MenuItem","img","_templateObject3","Header","zipOpen","react","onClick","newFolder","src","FolderIcon","uploadFile","UpIcon","downloadZip","SaveIcon","closeZip","CloseIcon","createZip","CreateIcon","getFolderDepth","pth","split","length","funcs","loadFile","fileObj","callback","reader","FileReader","onloadend","readerOutput","JSZip","loadAsync","result","then","zip","catch","err","readAsArrayBuffer","filesInPath","relativePath","folderDepth","returnVals","files","folders","f","includes","fDepth","relName","replace","push","test","getFileAsBlob","file","async","fBlob","createNew","getZipAsBlob","generateAsync","type","blob","createFolder","folderName","folder","addFile","fileName","fileOut","onerror","console","log","BrowserStyled","Browser_templateObject","ZipItemStyled","Browser_templateObject2","iconHeight","ItemIcon","Browser_templateObject3","ZipItem","NoIcon","fileSplit","item","ext","toLowerCase","ImageIcon","DocumentIcon","up","LeftIcon","determineIcon","style","float","Browser","contents","_this","isRoot","Browser_ZipItem","upOneFolder","hasContent","map","x","key","enterFolder","downloadFile","WelcomeStyled","FileDrop","App_templateObject","Welcome","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","mainTitle","loading","fileInput","React","createRef","_this2","name","updateStatusBar","zipHandler","setState","concat","zipLoaded","_this3","onDrop","handleFiles","htmlFor","id","onChange","current","ref","position","top","App","_this4","browsing","folderContents","status","fileUploader","newStr","browseZipFolder","pop","rP","join","newPath","_this5","FileSaver","saveAs","_this6","prompt","click","fileUploaded","success","errors","filesUploaded","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","bind","return","_this7","components_Header","components_Browser","App_Welcome","components_StatusBar","handleFileUpload","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.47e09c61.chunk.js","sourcesContent":["export default {\n  headerHeight: 64,\n  statusBarHeight: 40,\n  zipItemHeight: 40,\n  zipIconPadding: 10,\n  headerIconPadding: 10,\n  imageTypes: ['png', 'jpg', 'jpeg', 'bmp'],\n  colours: {\n    bar: '#20232A',\n    barText: '#FFF',\n    separator: '#a6a6a6'\n  }\n}\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport cnst from '../constants'\n\nconst StatusBarStyled = styled.div`\n  height: ${cnst.statusBarHeight}px;\n  background-color: ${cnst.colours.bar};\n  color: ${cnst.colours.barText};\n  padding-left: 20px;\n  line-height: ${cnst.statusBarHeight}px;\n`\n\nclass StatusBar extends Component {\n  render () {\n    return (\n      <StatusBarStyled>\n        {this.props.statusText}\n      </StatusBarStyled>\n    )\n  }\n}\n\nexport default StatusBar\n","import React, { Component, Fragment } from 'react'\nimport UpIcon from '../icons/up.png'\nimport SaveIcon from '../icons/save.png'\nimport FolderIcon from '../icons/folder.png'\nimport CloseIcon from '../icons/cross.png'\nimport CreateIcon from '../icons/create.png'\nimport styled from 'styled-components'\nimport cnst from '../constants'\n\nconst HeaderStyled = styled.div`\n  height: ${cnst.headerHeight}px;\n  background-color: ${cnst.colours.bar};\n  color: ${cnst.colours.barText};\n  line-height: ${cnst.headerHeight}px;\n  padding-left: 20px;\n  font-size: 30px;\n  font-family: 'Arial Black', 'Arial', sans-serif;\n`\nconst MenuStyled = styled.div`\n  float: right;\n  font-size: 25px;\n  font-family: 'Arial', sans-serif;\n  cursor: pointer;\n  height: 1px;\n`\nconst menuIconSize = cnst.headerHeight - cnst.headerIconPadding * 2\nconst MenuItem = styled.img`\n  position: relative;\n  top: ${cnst.headerIconPadding}px;\n  width: ${menuIconSize}px;\n  height: ${menuIconSize}px;\n  margin-right: 20px;\n`\n\nclass Header extends Component {\n  render () {\n    return (\n      <HeaderStyled>\n          Covalent Zip\n\n        <MenuStyled>\n          {this.props.zipOpen\n            ? <Fragment>\n              <MenuItem onClick={this.props.newFolder} src={FolderIcon} />\n              <MenuItem onClick={this.props.uploadFile} src={UpIcon} />\n              <MenuItem onClick={this.props.downloadZip} src={SaveIcon} />\n              <MenuItem onClick={this.props.closeZip} src={CloseIcon} />\n            </Fragment>\n            : <MenuItem onClick={this.props.createZip} src={CreateIcon} />\n          }\n        </MenuStyled>\n      </HeaderStyled>\n    )\n  }\n}\n\nexport default Header\n","import JSZip from 'jszip'\n\nvar zipFile\n\nfunction getFolderDepth (pth) {\n  return pth.split('/').length - 1\n}\n\nvar funcs = {\n  loadFile: (fileObj, callback) => {\n    var reader = new FileReader()\n\n    // Read file to and give to JSZip\n    reader.onloadend = (readerOutput) => {\n      zipFile = new JSZip()\n      zipFile.loadAsync(reader.result)\n        .then((zip) => {\n          callback(null, zip)\n        })\n        .catch((err) => {\n          callback(err, null)\n        })\n    }\n    reader.readAsArrayBuffer(fileObj)\n  },\n\n  filesInPath: (relativePath) => {\n    // E.G /files/folder/image.png is depth 2\n    var folderDepth = getFolderDepth(relativePath)\n    var returnVals = {\n      files: [],\n      folders: []\n    }\n\n    for (let f in zipFile.files) {\n      // We don't count ourselves as an empty file\n      if (f === relativePath) {\n        continue\n      }\n\n      if (f.includes(relativePath)) {\n        const fDepth = getFolderDepth(f)\n        const relName = f.replace(relativePath, '')\n\n        if (fDepth === folderDepth) {\n          // It's a file\n          returnVals.files.push(relName)\n          continue\n        }\n        if ((fDepth === folderDepth + 1) && /\\/$/.test(f)) {\n          // It's a sub-folder!\n          returnVals.folders.push(relName.replace('/', ''))\n        }\n      }\n    }\n\n    return returnVals\n  },\n\n  getFileAsBlob: (relName, callback) => {\n    zipFile.file(relName).async('blob')\n      .then((fBlob) => { callback(null, fBlob) })\n      .catch((err) => { callback(err, null) })\n  },\n\n  createNew: () => {\n    zipFile = new JSZip()\n  },\n\n  getZipAsBlob: (callback) => {\n    zipFile.generateAsync({ type: 'blob' })\n      .then((blob) => {\n        callback(null, blob)\n      }, (err) => {\n        callback(err, null)\n      })\n  },\n\n  createFolder: (folderName) => {\n    zipFile.folder(folderName)\n  },\n\n  addFile: (fileObj, fileName, callback) => {\n    var reader = new FileReader()\n    reader.onloadend = (fileOut) => {\n      zipFile.file(fileName, fileOut.result)\n      callback(true)\n    }\n    reader.onerror = (err) => {\n      console.log(err)\n      callback(false)\n    }\n    reader.readAsArrayBuffer(fileObj)\n  }\n}\n\nexport default funcs\n","import React, { Component, Fragment } from 'react'\nimport FolderIcon from '../icons/folder.png'\nimport DocumentIcon from '../icons/document.png'\nimport ImageIcon from '../icons/image.png'\nimport NoIcon from '../icons/no.png'\nimport LeftIcon from '../icons/left.png'\nimport styled from 'styled-components'\nimport cnst from '../constants'\n\nconst BrowserStyled = styled.div`\n  height: calc(100% - ${cnst.headerHeight + cnst.statusBarHeight}px);\n  overflow-y: scroll;\n`\n\nconst ZipItemStyled = styled.div`\n  height: ${cnst.zipItemHeight}px;\n  line-height: ${cnst.zipItemHeight}px;\n  border-bottom: 1px solid ${cnst.colours.separator};\n  padding-left: 20px;\n  cursor: pointer;\n`\nconst iconHeight = cnst.zipItemHeight - cnst.zipIconPadding\nconst ItemIcon = styled.img`\n  width: ${iconHeight}px;\n  height: ${iconHeight}px;\n  margin-top: ${(cnst.zipItemHeight - iconHeight) / 2}px;\n  margin-right: 5px;\n  float: left;\n`\n\nclass ZipItem extends Component {\n  determineIcon () {\n    if (!(this.props.file || this.props.folder)) {\n      return NoIcon\n    }\n    if (this.props.file) {\n      const fileSplit = this.props.item.split('.')\n      const ext = fileSplit[fileSplit.length - 1]\n      return (cnst.imageTypes.includes(ext.toLowerCase())) ? ImageIcon : DocumentIcon\n    } else {\n      if (this.props.up) return LeftIcon\n      return FolderIcon\n    }\n  }\n\n  render () {\n    return (\n      <ZipItemStyled onClick={this.props.onClick}>\n        <ItemIcon src={this.determineIcon()} />\n        <div style={{ float: 'left' }}>{this.props.item}</div>\n      </ZipItemStyled>\n    )\n  }\n}\n\nclass Browser extends Component {\n  hasContent () {\n    return (\n      this.props.contents.files.length > 0 ||\n      this.props.contents.folders.length > 0\n    )\n  }\n\n  render () {\n    return (\n      <BrowserStyled>\n        {this.props.isRoot ? <Fragment /> : <ZipItem item='..' folder up onClick={() => {\n          this.props.upOneFolder()\n        }} /> }\n\n        {this.hasContent()\n          ? <Fragment>\n            {this.props.contents.folders.map((x) => {\n              return <ZipItem key={x} item={x} folder onClick={() => {\n                this.props.enterFolder(x)\n              }} />\n            })}\n\n            {this.props.contents.files.map((x) => {\n              return <ZipItem key={x} item={x} file onClick={() => {\n                this.props.downloadFile(x)\n              }} />\n            })}\n          </Fragment>\n          : <ZipItem item='This folder is empty' />\n        }\n\n      </BrowserStyled>\n    )\n  }\n}\n\nexport default Browser\n","import React, { Component, Fragment } from 'react'\nimport styled from 'styled-components'\nimport cnst from './constants'\nimport StatusBar from './components/StatusBar'\nimport Header from './components/Header'\nimport FileDrop from 'react-file-drop'\nimport zipHandler from './zipHandler'\nimport Browser from './components/Browser'\nimport FileSaver from 'file-saver'\n\nconst WelcomeStyled = styled(FileDrop)`\n  height: calc(100% - ${cnst.headerHeight + cnst.statusBarHeight}px);\n`\n\nclass Welcome extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      mainTitle: 'A zip app built with web technologies',\n      loading: false,\n      fileName: 'unknown.zip'\n    }\n    this.fileInput = React.createRef()\n  }\n\n  handleFiles (files) {\n    if (files[0]) {\n      // They've given us something!\n      // TODO: Show loading\n      const fileName = files[0].name\n      this.props.updateStatusBar('Loading preview...')\n      zipHandler.loadFile(files[0], (err, zip) => {\n        this.setState({\n          loading: false\n        })\n        if (err) {\n          this.props.updateStatusBar(`Failed to open ${fileName}`)\n          console.log(err)\n          this.setState({\n            mainTitle: 'Whoops! Are you sure that was a zip file?'\n          })\n          return\n        }\n        this.props.updateStatusBar(`Previewing ${fileName}`)\n        this.props.zipLoaded(fileName)\n      })\n      this.setState({\n        loading: true,\n        fileName: fileName\n      })\n    } else {\n      this.props.updateStatusBar('Preview failed, no files dropped.')\n    }\n  }\n\n  render () {\n    return (\n      <Fragment>\n        <WelcomeStyled onDrop={(files) => { this.handleFiles(files) }}>\n          {this.state.loading\n            ? <Fragment>\n              <h1>Unpacking preview...</h1>\n              <h4>Please wait while load {this.state.fileName}</h4>\n            </Fragment>\n            : <Fragment>\n              <h1>{this.state.mainTitle}</h1>\n              <label htmlFor='clickInput'><h4>Drop a file on the window, or click here to browse</h4></label>\n              <input\n                id='clickInput'\n                type='file'\n                onChange={() => { this.handleFiles(this.fileInput.current.files) }}\n                ref={this.fileInput}\n                style={{ position: 'fixed', top: '-1000px' }} />\n            </Fragment>\n          }\n        </WelcomeStyled>\n      </Fragment>\n    )\n  }\n}\n\nclass App extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      browsing: false,\n      relativePath: '',\n      folderContents: [],\n      status: 'Idle',\n      fileName: 'none'\n    }\n    this.fileUploader = React.createRef()\n  }\n\n  updateStatusBar (newStr) {\n    this.setState({\n      status: newStr\n    })\n  }\n\n  browseZipFolder (relativePath) {\n    this.setState({\n      relativePath: relativePath,\n      folderContents: zipHandler.filesInPath(relativePath),\n      browsing: true\n    })\n  }\n\n  enterFolder (folderName) {\n    this.browseZipFolder(`${this.state.relativePath}${folderName}/`)\n  }\n\n  // It's 1:04AM\n  upOneFolder () {\n    // TODO: Investigate why this always returns to root\n    const folders = this.state.relativePath.split('/')\n    folders.pop()\n    folders.pop()\n    const rP = folders.join('/')\n    const newPath = `${rP}${(rP === '') ? '' : '/'}`\n    this.browseZipFolder(newPath)\n  }\n\n  downloadFile (relName) {\n    const fileName = `${this.state.relativePath}${relName}`\n    zipHandler.getFileAsBlob(fileName, (err, fBlob) => {\n      if (err) {\n        this.updateStatusBar('Failed to download file.')\n        console.log(err)\n        return\n      }\n      FileSaver.saveAs(fBlob, relName)\n    })\n  }\n\n  closeZip () {\n    this.updateStatusBar(`Preview closed`)\n    this.setState({\n      browsing: false\n    })\n  }\n  createZip () {\n    zipHandler.createNew()\n    this.zipLoaded('newZip.zip')\n    this.updateStatusBar('Zip file created')\n  }\n  downloadZip () {\n    zipHandler.getZipAsBlob((err, fBlob) => {\n      if (err) {\n        this.updateStatusBar('Failed to compress files!')\n        console.log(err)\n        return\n      }\n      FileSaver.saveAs(fBlob, this.state.fileName)\n    })\n  }\n  newFolder () {\n    // TODO: Use a styled modal, not prompt\n    const folderName = prompt('Name for new folder:')\n    if (folderName) {\n      zipHandler.createFolder(`${this.state.relativePath}${folderName}`)\n      // Update the view\n      this.browseZipFolder(this.state.relativePath)\n      this.updateStatusBar(`Created ${folderName}/`)\n    } else {\n      this.updateStatusBar(\"Can't create a folder with no name!\")\n    }\n  }\n  uploadFile () {\n    this.fileUploader.current.click()\n  }\n  handleFileUpload () {\n    var files = this.fileUploader.current.files\n    if (files.length > 0) {\n      var filesUploaded = 0\n      var errors = false\n\n      function fileUploaded (success) {\n        filesUploaded++\n        if (!success) {\n          errors = true\n        }\n        if (filesUploaded === files.length) {\n          this.updateStatusBar((errors)\n            ? 'Some errors occurred while uploading. Check console.'\n            : 'All files added successfully.'\n          )\n          this.browseZipFolder(this.state.relativePath)\n        }\n      }\n\n      for (let f of files) {\n        zipHandler.addFile(f, `${this.state.relativePath}${f.name}`, fileUploaded.bind(this))\n      }\n    } else {\n      this.updateStatusBar('No files were selected')\n    }\n  }\n\n  zipLoaded (fileName) {\n    this.setState({\n      fileName: fileName\n    })\n    this.browseZipFolder('')\n  }\n\n  render () {\n    return (\n      <Fragment>\n        <Header\n          closeZip={() => { this.closeZip() }}\n          createZip={() => { this.createZip() }}\n          downloadZip={() => { this.downloadZip() }}\n          newFolder={() => { this.newFolder() }}\n          uploadFile={() => { this.uploadFile() }}\n          zipOpen={this.state.browsing} />\n        {this.state.browsing\n          ? <Browser\n            isRoot={(this.state.relativePath === '')}\n            enterFolder={(x) => { this.enterFolder(x) }}\n            upOneFolder={() => { this.upOneFolder() }}\n            updateStatusBar={(x) => { this.updateStatusBar(x) }}\n            downloadFile={(relName) => { this.downloadFile(relName) }}\n            contents={this.state.folderContents} />\n          : <Welcome\n            zipLoaded={(x) => { this.zipLoaded(x) }}\n            updateStatusBar={(x) => { this.updateStatusBar(x) }}\n          />}\n        <StatusBar statusText={this.state.status} />\n\n        <input\n          id='fileUploader'\n          type='file'\n          onChange={this.handleFileUpload.bind(this)}\n          ref={this.fileUploader}\n          style={{ position: 'fixed', top: '-1000px' }} />\n      </Fragment>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","module.exports = __webpack_public_path__ + \"static/media/folder.aff575ad.png\";","module.exports = __webpack_public_path__ + \"static/media/up.35c32a88.png\";","module.exports = __webpack_public_path__ + \"static/media/save.2f5375b3.png\";","module.exports = __webpack_public_path__ + \"static/media/cross.116715a0.png\";","module.exports = __webpack_public_path__ + \"static/media/create.d2a13e88.png\";","module.exports = __webpack_public_path__ + \"static/media/document.bd9e8bda.png\";","module.exports = __webpack_public_path__ + \"static/media/image.c968770d.png\";","module.exports = __webpack_public_path__ + \"static/media/no.982f7f9d.png\";","module.exports = __webpack_public_path__ + \"static/media/left.4429c048.png\";"],"sourceRoot":""}